---
title: "04_table1"
author: "Randy"
format: 
  html: 
    code-fold: true
    code-tools: true
    code-link: true
    df-print: paged
editor: visual
# theme:
#   light: cosmo
#   dark: [cosmo, theme-dark.scss]
toc: true
---

## Table1 for PLMLMM

```{r}
#| label: "setup and loading data"
#| include: false
#| results: "hide"

knitr::opts_chunk$set()
rm(list=ls())
graphics.off()

devtools::load_all(quiet = TRUE)
library(tidyverse, quietly = TRUE)
library(gtsummary, quietly = TRUE)
library(flextable, quietly = TRUE)

data <- left_join(epic, demog, by = "id") %>%
  mutate(sex = as.factor(sex))

ID <- unique(data$id)
test <- sample(ID, 457, replace = FALSE)

data0 <- data %>%
  mutate(group = 
           case_when(id %in% test ~ "testing",
                     TRUE ~ "training"))
# View(data0)
```

## Data cleaning

```{r}
#| label: dataset cleaning
#| warnings: false
#| message: false
#| results: "hide"

data1 <- data0 %>%
  group_by(id, group) %>%
  summarize(age_mean = mean(age),
            age_min = min(age),
            age_max = max(age),
            age_n = length(age),
            visitn = n(),
            h_mean = mean(ht),
            h_max = max(ht),
            h_min = min(ht),
            # Tue Apr  5 11:09:20 2022 ------------------------------
            ## add BMI at the baseline
            w_mean = mean(wt),
            w_max = max(wt),
            w_min = min(wt),
            sex = sex,
            genotype = genotype,
            ethnic = ethnic,
            race = race) %>% 
  ungroup() %>%
  unique()

# data0 <- data %>%
#   group_by(id, sex, ethnic, genotype) %>%
#   nest()

## working dataset

data2 <- full_join(data1, data) %>% 
  as.data.frame() %>%
  mutate(time = age - age_min,
         age_diff = age_max - age_min,
         BMI = wt / (0.1 * ht)^2) 
```

```{r}
#| label: examples
head(data1)

## save dataset as working dataset
# write.csv(data2, file = "data/epic_clean_randy.csv")
head(data2)
```

## Making table1

```{r}
#| label: making table1

## table0 contains all the information about demgo for total
table0 <- data1 %>%
  unique() %>%
  dplyr::select(-id) %>%
  mutate(
    ethnic = case_when(ethnic == 1 ~ "Hispanic",
                     ethnic == 2 ~ "Non-Hispanic"),
    race = case_when(race == 1 ~ "White",
                     race != 1 ~ "Other"),
    sex = case_when(sex == "F" ~ "Female",
                    sex == "M" ~ "Male"),
    age_diff = age_max - age_min) %>% 
  dplyr::select(
         Genotype = genotype,
         Gender = sex,
         Race = race,
         Ethnicity = ethnic,
         "Visit number" = visitn,
         "Age mean" = age_mean, 
         "Age baseline" = age_min, 
         "Age final" = age_max, 
         "Follow up years" = age_diff,
         "Height mean" = h_mean, 
         "Height baseline" = h_min,
         "Weight mean" = w_mean,
         "Weight baseline" = w_min) %>% 
  ## select all the variables for table1
  tbl_summary() %>%
  ## just display all the variables in one column
  modify_header(label = "**Variable**") %>%
  # update the column header
  bold_labels() %>%
  italicize_labels() %>%
  as_flex_table() %>%
  flextable::bold(part = "header") %>% 
  ## auto adjust the column widths 
  flextable::autofit()


## table1 contains information of dataset grouped as training and testing
table1 <- data1 %>%
  unique() %>%
  dplyr::select(-id) %>%
  mutate(
    ethnic = case_when(ethnic == 1 ~ "Hispanic",
                     ethnic == 2 ~ "Non-Hispanic"),
    race = case_when(race == 1 ~ "White",
                     race != 1 ~ "Other"),
    sex = case_when(sex == "F" ~ "Female",
                    sex == "M" ~ "Male"),
    age_diff = age_max - age_min) %>% 
  dplyr::select(group,
                
         Genotype = genotype,
         Gender = sex,
         Race = race,
         Ethnicity = ethnic,
         "Visit number" = visitn,
         "Age mean" = age_mean, 
         "Age baseline" = age_min, 
         "Age final" = age_max, 
         "Follow up years" = age_diff,
         "Height mean" = h_mean, 
         "Height baseline" = h_min,
         "Weight mean" = w_mean,
         "Weight baseline" = w_min) %>% 
  ## select all the variables for table1
  tbl_summary(by = group) %>%
  ## just display all the variables in one column
  modify_header(label = "**Variable**") %>%
  # update the column header
  bold_labels() %>%
  italicize_labels() %>%
  as_flex_table() %>%
  flextable::bold(part = "header") %>% 
  ## auto adjust the column widths 
  flextable::autofit()
```

## Results

```{r}
#| label: saving table1

table0
table1

## save pptx -----------------------------------------------
## flextable can be saved directly to powerpoints
flextable::save_as_pptx(
  table1, 
  path = "04_table1_files/01_table1.pptx")

library(webshot)
# webshot::install_phantomjs()

flextable::save_as_image(table1, 
              path = "04_table1_files/01_table1.png",
              # zoom = 3, 
              # expand = 10, 
              webshot = "webshot")

flextable::save_as_image(table0, 
              path = "04_table1_files/01_table0.png",
              # zoom = 3, 
              # expand = 10, 
              webshot = "webshot")
```
